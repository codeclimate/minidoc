c
view.instance_variable_get("@cursor").map(&transformer)
view.map(&transformer)
transformer
view.map(transformer)
view.respond_to? :map
view
viw
view.map(transformer)
view.map(&:@transformer)
view.map(@transformer)
view
transformer = User.find({}).instance_variable_get("@transformer")
view.lazy.to_a
view.to_a
view = User.find({}).instance_variable_get("@view")
User.find({}).instance_variable_get("@view")
User.find({})
User.find({}).map(&:name)
User.find({})
c
User.find({}).map(&:name)
User.find({})
c
User.find({}).map(&:name)
User.find({})
User.find({}).map(&:name)
User.find({}).map(&:name)(
c
User.find({})
User.find({}).map(&:name)
User.find({}).to_a
User.find({}.to_a
User.find({}).map(&:name).to_a
User.find({}).map(&:name).first
User.find({}).map(&:name)
User.find({})
User.find({}).to_a
User.find({})
c
exit
User.find({}).to_a
User.find({})
User.find({}).map(&:name).to_a
User.find({}).map(&:name)
User.find({})
c
User.collection.find({})
User.collection
User.find({}).map(&:name)
User.first
User.find({}).each { |u| puts u }
User.find({}).each { |u| u }
User.find({})
c
User.find({}).each { |d| d }
User.find({}).to_a
User.find({}).first
User.find({})
User.find
c
User.collection.find({}, { modifiers: }).first
User.collection.find({}).first
User.collection.find({})
User.collection
